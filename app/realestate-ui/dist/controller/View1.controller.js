sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast","sap/m/MessageBox","sap/ui/model/json/JSONModel","sap/m/Dialog","sap/m/List","sap/m/StandardListItem","sap/m/Button"],function(e,t,n,o,i,s,r,a){"use strict";return e.extend("real.estate.realestateui.controller.View1",{onInit:function(){},onFileChange:function(e){const t=e.getParameter("files")[0];if(!t)return;const n=new FileReader;n.onload=e=>{const t=this.byId("siteMapImage");t.setSrc(e.target.result);t.setVisible(true);setTimeout(()=>{const e=t.getDomRef();if(e&&!e._clickAttached){e.addEventListener("click",this.onImageClick.bind(this));e._clickAttached=true}},200)};n.readAsDataURL(t)},onUploadPress:function(){const e=this.byId("fileUploader");if(!e.getValue()){t.show("Please choose an image first.");return}t.show("Image uploaded successfully.")},onImageClick:function(e){const n=e.currentTarget;const o=n.getBoundingClientRect();const i=e.clientX-o.left;const s=e.clientY-o.top;const r=i/o.width*100;const a=s/o.height*100;const l=this.getView().getModel();if(!l){t.show("Error: OData model is not properly initialized.");console.error("OData model is not initialized:",l);return}const c=l.bindList("/Buildings");c.requestContexts().then(e=>{this._regions=e.map(e=>{const t=e.getObject();return{name:t.name,buildingID:t.ID,xMin:t.xMin,xMax:t.xMax,yMin:t.yMin,yMax:t.yMax}});console.log(`Clicked at: X: ${r.toFixed(2)}%, Y: ${a.toFixed(2)}%`);if(!this._regions){t.show("Regions not yet loaded. Please wait.");return}const n=this._regions.find(e=>r>=e.xMin&&r<=e.xMax&&a>=e.yMin&&a<=e.yMax);if(n){this.showUnitsPopup(n.buildingID,n.name);t.show(`Selected ${n.name}`)}else{t.show("No building at this point.")}console.log("Regions fetched from backend:",this._regions)}).catch(e=>{t.show("Error fetching regions. Please ensure the backend service is running.");console.error("Error fetching regions:",e)})},onBuildingSelect:function(e){const t=e.getParameter("listItem").getBindingContext();const n=t.getProperty("ID");const o=t.getProperty("name");this.showUnitsPopup(n,o)},showUnitsPopup:function(e,n){const o=this.getView().getModel();if(!o){t.show("Error: OData model is not properly initialized.");console.error("OData model is not initialized:",o);return}const l=o.bindList(`/Buildings('${e}')/units`);l.requestContexts().then(e=>{const o=e.map(e=>e.getObject());if(o.length===0){t.show(`No units found for ${n}.`);return}const l=new sap.ui.model.json.JSONModel({Units:o});const c=new s({mode:"SingleSelectMaster",selectionChange:e=>{const t=e.getParameter("listItem").getBindingContext("unitModel").getObject();this.onUnitSelect(t,d,c,n,l)},items:{path:"unitModel>/Units",template:new r({title:"{unitModel>name}",description:"Status: {unitModel>status}",highlight:"{= ${unitModel>status} === 'reserved' ? 'Error' : 'Success' }",type:"Active"})}});const d=new i({title:`Units in ${n}`,content:c,beginButton:new a({text:"Close",press:()=>d.close()}),afterClose:()=>d.destroy()});d.setModel(l,"unitModel");d.open()}).catch(e=>{t.show("Error loading units. Please ensure the backend service is running.");console.error("Error fetching units:",e)})},onUnitSelect:function(e,t,n,o,i){const l=new s({mode:"SingleSelectMaster",selectionChange:s=>{const r=s.getParameter("listItem").getTitle();this.handleUnitAction(r,e,t,n,o,i)},items:[new r({title:"Create Reservation",type:"Active"}),new r({title:"Go to Payment",type:"Active"})]});t.setTitle(`Actions for ${e.name}`);t.removeAllContent();t.addContent(l);t.setEndButton(new a({text:"Back",press:()=>{t.setTitle(`Units in ${o}`);t.removeAllContent();t.addContent(n);t.setEndButton(null)}}))},handleUnitAction:function(e,n,o,i,s,r){const a=this.getView().getModel();if(!a||!a.submitBatch){t.show("Error: OData model is not properly initialized for updates.");console.error("OData model is not initialized or does not support updates:",a);return}if(e==="Create Reservation"){const e=a.bindContext(`/Units('${n.ID}')`,null,{$$updateGroupId:a.getUpdateGroupId()});e.initialize();const l=e.getBoundContext();if(!l){t.show("Error: Unable to resolve unit context for update.");console.error("Context not resolved:",e);return}l.setProperty("status","reserved");a.submitBatch(a.getUpdateGroupId()).then(()=>{t.show(`Reservation for ${n.name} created`);const e=r.getProperty("/Units");const a=e.findIndex(e=>e.ID===n.ID);if(a!==-1){e[a].status="reserved";r.setProperty("/Units",e)}o.setTitle(`Units in ${s}`);o.removeAllContent();o.addContent(i);o.setEndButton(null)}).catch(e=>{t.show("Error creating reservation. Please check the backend.");console.error("Error updating unit:",e);const o=r.getProperty("/Units");const i=o.findIndex(e=>e.ID===n.ID);if(i!==-1){o[i].status=n.status;r.setProperty("/Units",o)}})}else if(e==="Go to Payment"){t.show(`Navigating to payment for ${n.name}`);o.setTitle(`Units in ${s}`);o.removeAllContent();o.addContent(i);o.setEndButton(null)}}})});
//# sourceMappingURL=View1.controller.js.map